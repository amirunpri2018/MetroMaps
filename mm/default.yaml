global: &GLOBALS
    log_level: 'debug'
    doc_metadata: SPECIFY #FILL OUT
    mm_standard_input: /tmp/mm_input.json


input_helper:
    <<: *GLOBALS
    mode: on
    name: whitelistcounter
    encoding: UTF-8
    in_encoding: cp1252
    whitelist: specify_your_whitelist_file_here # FILL OUT example: domains/lotr/data/whitelist.txt (new-line separated)
    blacklist: specify_your_blacklist_here # Required if choosing blacklistcounter
    discard_frequency: 2 #specify_freq # Required if blacklistcounter
    input_directory: split_input_files_here # FILL OUT example: domains/lotr/data/rawtext
        


# output_json contains a list of clusters (a dictionary):
#     - index, cluster_start_date, cluster_end_date, doc_data
#     - doc_data: {"tokens": [{tfidf,plaintext,token_doc_count,id}], "doc_metadata": {timestamp,id,name}
# This might be grounds for optimization
slicing:
    <<: *GLOBALS
    mode: on
    name: standard
    output_dir: /tmp/query_result 
    doc_metadata: specify_doc_metadata_here ## FILL OUT
    num_timeslices: 20
    output_json: &score_JSON /tmp/legacy_handler_out.json
    choose_representative_token: on
    
    
clustering:
    <<: *GLOBALS
    mode: on
    input_json: *score_JSON 
    similarity_merge: 1 # <intersection> / <small size> above this limit merges
    dilution_merge: 0 # only <= below this number is merged. This is percentage of new terms that can be added
    min_freq_in_doc: 0
    tfidf_accept: 0
    max_tokens_per_doc: 50
    output_json: &clusters_JSON /tmp/clusters.json

    graphing: off
    out_graph_dir: /tmp/timeslice_graphs/
    # Remove the following when cleaning project
    out_legacy_dir: /tmp/clusters/clusters
mapgen:
    <<: *GLOBALS
    mode: on
    cluster_dir: /tmp/clusters
    raw_lines: /tmp/raw_lines
    line_descriptions: /tmp/line_descriptions
    chosen_lines: /tmp/final_lines.mm
    chosen_docs_for_map: final_map.mm

vizbuilder:
    <<: *GLOBALS
    mode: on
    name: clusterdescription
    input_lines: final_map.mm
    final_map_json: final_map.json
    producehtml: on
    website_output_dir: . #directory to which web files will be stored
    webpage_name: Metro.html

